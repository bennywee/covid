cov_case_curve %>%
group_by(cname) %>%
filter(cu_cases == max(cu_cases)) %>%
ungroup() %>%
top_n(50, cu_cases) %>%
select(iso3, cname, cu_cases) %>%
mutate(days_elapsed = 1,
cu_cases = max(cov_case_curve$cu_cases) - 1e4,
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
cov_case_curve_bg <- cov_case_curve %>%
select(-cname) %>%
filter(iso3 %in% top_50$iso3)
cov_case_curve_bg
# From the blog post------------------------------
top_50 <- cov_case_curve %>%
group_by(cname) %>%
filter(cu_cases == max(cu_cases)) %>%
ungroup() %>%
top_n(50, cu_cases) %>%
select(iso3, cname, cu_cases) %>%
mutate(days_elapsed = 1,
#      cu_cases = max(cov_case_curve$cu_cases) - 1e4,
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
cov_case_curve_bg <- cov_case_curve %>%
select(-cname) %>%
filter(iso3 %in% top_50$iso3)
cov_case_curve_endpoints <- cov_case_curve %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
group_by(iso3) %>%
filter(cu_cases == max(cu_cases)) %>%
select(cname, iso3, days_elapsed, cu_cases) %>%
ungroup()
cov_case_sm <- cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
ggplot(mapping = aes(x = days_elapsed, y = cu_cases)) +
# The line traces for every country, in every panel
geom_line(data = cov_case_curve_bg,
aes(group = iso3),
size = 0.15, color = "gray80") +
# The line trace in red, for the country in any given panel
geom_line(color = "firebrick",
lineend = "round") +
# The point at the end. Bonus trick: some points can have fills!
geom_point(data = cov_case_curve_endpoints,
size = 1.1,
shape = 21,
color = "firebrick",
fill = "firebrick2"
) +
# The country label inside the panel, in lieu of the strip label
geom_text(data = top_50,
mapping = aes(label = cname),
vjust = "inward",
hjust = "inward",
fontface = "bold",
color = "firebrick",
size = 2.1) +
# Log transform and friendly labels
scale_y_log10(labels = scales::label_number_si()) +
# Facet by country, order from high to low
facet_wrap(~ reorder(cname, -cu_cases), ncol = 5) +
labs(x = "Days Since 100th Confirmed Case",
y = "Cumulative Number of Cases (log10 scale)",
title = "Cumulative Number of Reported Cases of COVID-19: Top 50 Countries",
subtitle = paste("Data as of", "28 March 2020"),
#        subtitle = paste("Data as of", format(max(cov_curve$date), "%A, %B %e, %Y")),
caption = "Kieran Healy @kjhealy / Data: https://www.ecdc.europa.eu/") +
theme(plot.title = element_text(size = rel(1), face = "bold"),
plot.subtitle = element_text(size = rel(0.7)),
plot.caption = element_text(size = rel(1)),
# turn off the strip label and tighten the panel spacing
strip.text = element_blank(),
panel.spacing.x = unit(-0.05, "lines"),
panel.spacing.y = unit(0.3, "lines"),
axis.text.y = element_text(size = rel(0.5)),
axis.title.x = element_text(size = rel(1)),
axis.title.y = element_text(size = rel(1)),
axis.text.x = element_text(size = rel(0.5)),
legend.text = element_text(size = rel(1)))
cov_case_sm
View(cov_case_curve)
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
ggplot(mapping = aes(x = days_elapsed, y = cu_cases)) +
# The line traces for every country, in every panel
geom_line(data = cov_case_curve_bg,
aes(group = iso3),
size = 0.15, color = "gray80") +
# The line trace in red, for the country in any given panel
geom_line(color = "firebrick",
lineend = "round") +
# The point at the end. Bonus trick: some points can have fills!
geom_point(data = cov_case_curve_endpoints,
size = 1.1,
shape = 21,
color = "firebrick",
fill = "firebrick2"
)
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
ggplot(mapping = aes(x = days_elapsed, y = cu_cases)) +
# The line traces for every country, in every panel
geom_line(data = cov_case_curve_bg,
aes(group = iso3),
size = 0.15, color = "gray80") +
# The line trace in red, for the country in any given panel
geom_line(color = "firebrick",
lineend = "round") +
# The point at the end. Bonus trick: some points can have fills!
geom_point(data = cov_case_curve_endpoints,
size = 1.1,
shape = 21,
color = "firebrick",
fill = "firebrick2"
)
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
ggplot(mapping = aes(x = days_elapsed, y = cu_cases)) +
# The line traces for every country, in every panel
geom_line(data = cov_case_curve_bg,
aes(group = iso3),
size = 0.15, color = "gray80") +
# The line trace in red, for the country in any given panel
geom_line(color = "firebrick",
lineend = "round") +
# The point at the end. Bonus trick: some points can have fills!
geom_point(data = cov_case_curve_endpoints,
size = 1.1,
shape = 21,
color = "firebrick",
fill = "firebrick2"
) +
# The country label inside the panel, in lieu of the strip label
geom_text(data = top_50,
mapping = aes(label = cname),
vjust = "inward",
hjust = "inward",
fontface = "bold",
color = "firebrick",
size = 2.1) +
# Log transform and friendly labels
scale_y_log10(labels = scales::label_number_si()) +
# Facet by country, order from high to low
facet_wrap(~ reorder(cname, -cu_cases), ncol = 5)
top_50
top_50 %>% arrange(cu_cases)
top_50 %>% arrange(cu_cases, desc = FALSE)
top_50 %>% arrange(cu_cases, desc = TRUE)
top_50 %>% arrange(cu_cases, desc)
top_50 %>% arrange(cu_cases, desc = TRUE)
>arrange
?arrange
top_50 %>% arrange(desc(cu_cases))
top_50 %>% arrange(desc(cu_cases))
top_50 %>% arrange(desc(cu_cases)) %>% View()
cov_case_curve
cov_case_curve %>% select(date) %>% max()
max(cov_case_curve$date)
cov_case_curve %>%
group_by(cname) %>%
filter(cu_cases == max(cu_cases)) %>%
ungroup() %>%
top_n(50, cu_cases) %>%
select(iso3, cname, cu_cases) %>%
mutate(days_elapsed = 1,
cu_cases = max(cov_case_curve$cu_cases) - 1e4,
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
cov_case_curve %>%
group_by(cname) %>%
filter(cu_cases == max(cu_cases)) %>%
ungroup() %>%
top_n(50, cu_cases) %>%
select(iso3, cname, cu_cases) %>%
mutate(days_elapsed = 1,
cu_cases = max(cov_case_curve$cu_cases) - 1e4,
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% View
cov_case_curve_bg <- cov_case_curve %>%
select(-cname) %>%
filter(iso3 %in% top_50$iso3)
cov_case_curve_endpoints <- cov_case_curve %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
group_by(iso3) %>%
filter(cu_cases == max(cu_cases)) %>%
select(cname, iso3, days_elapsed, cu_cases) %>%
ungroup()
cov_case_sm <- cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>%
ggplot(mapping = aes(x = days_elapsed, y = cu_cases)) +
# The line traces for every country, in every panel
geom_line(data = cov_case_curve_bg,
aes(group = iso3),
size = 0.15, color = "gray80") +
# The line trace in red, for the country in any given panel
geom_line(color = "firebrick",
lineend = "round") +
# The point at the end. Bonus trick: some points can have fills!
geom_point(data = cov_case_curve_endpoints,
size = 1.1,
shape = 21,
color = "firebrick",
fill = "firebrick2"
) +
# The country label inside the panel, in lieu of the strip label
geom_text(data = top_50,
mapping = aes(label = cname),
vjust = "inward",
hjust = "inward",
fontface = "bold",
color = "firebrick",
size = 2.1) +
# Log transform and friendly labels
scale_y_log10(labels = scales::label_number_si()) +
# Facet by country, order from high to low
facet_wrap(~ reorder(cname, -cu_cases), ncol = 5) +
labs(x = "Days Since 100th Confirmed Case",
y = "Cumulative Number of Cases (log10 scale)",
title = "Cumulative Number of Reported Cases of COVID-19: Top 50 Countries",
subtitle = paste("Data as of", format(max(cov_curve$date), "%A, %B %e, %Y")),
caption = "Kieran Healy @kjhealy / Data: https://www.ecdc.europa.eu/") +
theme(plot.title = element_text(size = rel(1), face = "bold"),
plot.subtitle = element_text(size = rel(0.7)),
plot.caption = element_text(size = rel(1)),
# turn off the strip label and tighten the panel spacing
strip.text = element_blank(),
panel.spacing.x = unit(-0.05, "lines"),
panel.spacing.y = unit(0.3, "lines"),
axis.text.y = element_text(size = rel(0.5)),
axis.title.x = element_text(size = rel(1)),
axis.title.y = element_text(size = rel(1)),
axis.text.x = element_text(size = rel(0.5)),
legend.text = element_text(size = rel(1)))
cov_case_sm
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% View
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% filter(date == '2020-03-28') %>% View
cu_cases
?reorder
reorder(top$50cname, -top_50$cu_cases)
reorder(top_50$cname, -top_50$cu_cases)
reorder((cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname)), -top_50$cu_cases) %>% View
names = cov_case_curve  %>%
+              filter(iso3 %in% top_50$iso3) %>%
+              mutate(cname = recode(cname, `United States` = "USA",
+                                    `Iran, Islamic Republic of` = "Iran",
+                                    `Korea, Republic of` = "South Korea",
+                                    `United Kingdom` = "UK")) %>% select(cname)
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname)
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname) %>% distinct()
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname) %>% distinct()
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname) %>% distinct()
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% select(cname) %>% distinct()
cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% ungroup() %>%  select(cname) %>% distinct()
tnames = cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% ungroup() %>%  select(cname) %>% distinct()
tnames = cov_case_curve  %>%
filter(iso3 %in% top_50$iso3) %>%
mutate(cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK")) %>% ungroup() %>%  select(cname, cu_cases) %>% distinct()
reorder(tnames$cname, tnames$cu_cases)
library(tidyverse)
get_ecdc_csv <- function(url = "https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
date = lubridate::today(),
writedate = lubridate::today(),
fname = "ecdc-cumulative-",
ext = "csv",
dest = "data") {
target <- url
message("target: ", target)
destination <- fs::path(here::here("data"), paste0(fname, writedate), ext = ext)
message("saving to: ", destination)
tf <- tempfile(fileext = ext)
curl::curl_download(target, tf)
fs::file_copy(tf, destination, overwrite = TRUE)
janitor::clean_names(readr::read_csv(tf))
}
iso3_cnames <- read_csv("data/countries_iso3.csv")
iso2_to_iso3 <- read_csv("data/iso2_to_iso3.csv")
cname_table <- left_join(iso3_cnames, iso2_to_iso3, by = 'iso3')
# Build table
covid_raw <- get_ecdc_csv()
covid <- covid_raw %>%
mutate(date = lubridate::dmy(date_rep),
iso2 = geo_id)
covid <- left_join(covid, cname_table)
cname_xwalk <- read_csv("data/ecdc_to_iso2_xwalk.csv",
na = "")
# Coalesce nulls
coalesce_join <- function(x, y,
by = NULL,
suffix = c(".x", ".y"),
join = dplyr::full_join, ...) {
joined <- join(x, y, by = by, suffix = suffix, ...)
# names of desired output
cols <- dplyr::union(names(x), names(y))
to_coalesce <- names(joined)[!names(joined) %in% cols]
suffix_used <- suffix[ifelse(endsWith(to_coalesce, suffix[1]), 1, 2)]
# remove suffixes and deduplicate
to_coalesce <- unique(substr(
to_coalesce,
1,
nchar(to_coalesce) - nchar(suffix_used)
))
coalesced <- purrr::map_dfc(to_coalesce, ~dplyr::coalesce(
joined[[paste0(.x, suffix[1])]],
joined[[paste0(.x, suffix[2])]]
))
names(coalesced) <- to_coalesce
dplyr::bind_cols(joined, coalesced)[cols]
}
covid1 <- coalesce_join(covid,
cname_xwalk,
by = "geo_id",
join = dplyr::left_join)
focus_cn <- c("CHN", "DEU", "GBR", "USA", "IRN", "JPN",
"KOR", "ITA", "FRA", "ESP", "CHE")
cov_case_curve <- covid %>%
select(date, cname, iso3, cases, deaths) %>%
drop_na(iso3) %>%
group_by(iso3) %>%
arrange(date) %>%
mutate(cu_cases = cumsum(cases),
cu_deaths = cumsum(deaths)) %>%
filter(cu_cases > 99) %>%
mutate(days_elapsed = date - min(date),
end_label = ifelse(date == max(date), cname, NA),
end_label = recode(end_label, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"),
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
`United Kingdom` = "UK"))
cov_case_curve <- covid %>%
select(date, cname, iso3, cases, deaths) %>%
drop_na(iso3) %>%
group_by(iso3) %>%
arrange(date) %>%
mutate(cu_cases = cumsum(cases),
cu_deaths = cumsum(deaths)) %>%
filter(cu_cases > 99) %>%
mutate(days_elapsed = date - min(date),
end_label = ifelse(date == max(date), cname, NA),
end_label = recode(end_label, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"),
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
View(ccov_case_curve)
cov_case_curve <- covid %>%
select(date, cname, iso3, cases, deaths) %>%
drop_na(iso3) %>%
group_by(iso3) %>%
arrange(date) %>%
mutate(cu_cases = cumsum(cases),
cu_deaths = cumsum(deaths)) %>%
filter(cu_cases > 99) %>%
mutate(days_elapsed = date - min(date),
end_label = ifelse(date == max(date), cname, NA),
end_label = recode(end_label, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"),
cname = recode(cname, `United States` = "USA",
`Iran, Islamic Republic of` = "Iran",
`Korea, Republic of` = "South Korea",
`United Kingdom` = "UK"))
cov_case_curve
max(cov_case_curve$date)
write.csv(cov_case_curve, 'bw/cov_case_curve1.csv')
Y
Y
Y
python
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.ticker as tick
# Setting some Matplotlib parameters
%matplotlib inline
mpl.rcParams['figure.dpi']= 300
plt.style.use('seaborn-talk')
# Replace the some of the country names with shorter labels
data = pd.read_csv('/Users/benjaminwee/Documents/projects/covid/bw/cov_case_curve1.csv')\
.replace({'cname' :
{'United States' : 'USA',
'Iran, Islamic Republic of' : 'Iran',
'Korea, Republic of' : 'South Korea',
'United Kingdom' : 'UK'}})
# Create log cu_cases
data['log_cases'] = np.log10(data['cu_cases'])
# Show first 5 rows of the main dataset
data.head()
library(reticulate)
n
use_python('/usr/local/bin/python3.6')
use_python('/usr/local/bin/python3')
library(reticulate)
library(reticulate)
py_install("pandas")
use_python('/usr/local/bin/python')
library(reticulate)
py_install("pandas")
use_python('/Users/benjaminwee/anaconda/bin/python')
library(reticulate)
py_install("pandas")
detach("package:reticulate", unload = TRUE)
library(reticulate)
library(reticulate)
py_install("pandas")
n
